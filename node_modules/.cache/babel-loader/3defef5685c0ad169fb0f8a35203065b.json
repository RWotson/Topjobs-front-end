{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   FormControl,\n//   FormLabel,\n//   Input,\n// } from \"@chakra-ui/react\";\n// import { ChakraProvider } from \"@chakra-ui/react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./mix.css\";\n// const Register = () => {\n//   const [formData, setFormData] = useState({\n//     fname: \"\",\n//     email: \"\",\n//     password: \"\",\n//     cpassword: \"\"\n//   });\n//   const history = useNavigate();\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     // Form validation\n//     if (!formData.fname || !formData.email || !formData.password || !formData.cpassword) {\n//       return toast.error(\"Please fill in all fields\");\n//     }\n//     if (formData.password !== formData.cpassword) {\n//       return toast.error(\"Password and Confirm Password do not match\");\n//     }\n//     try {\n//       const response = await fetch(\"http://localhost:8009/register\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//           ...formData,\n//           role: \"user\"\n//         })\n//       });\n//       if (!response.ok) {\n//         throw new Error(\"Failed to register\");\n//       }\n//       // toast.success(\"Registration successful!\");\n//       history(\"/login\"); \n//     } catch (error) {\n//       console.error(error); \n//       toast.error(\"Failed to register\");\n//     }\n//   };\n//   const navlogin = ()=>{\n//     history(\"/login\"); \n//   }\n//   return (\n//     <ChakraProvider>\n//       <div className=\"form-background\">\n//         <Box maxW=\"md\" mx=\"auto\" p=\"6\">\n//           <div className=\"m-30 bg-gray-100 rounded-xl\">\n//           <div className=\"form_heading\">\n//                         <h1 className=\"text-black font-bold text-3xl p-5\">Welcome Topjobs !</h1>\n//                         <p className=\"text-black font-bold p-2\">Hi, Get started for free - Register today!</p>\n//                     </div>\n//             <Box p={4}>\n//               <form onSubmit={handleSubmit}>\n//                 <FormControl id=\"fname\" isRequired>\n//                   <FormLabel>Full Name</FormLabel>\n//                   <Input\n//                     type=\"text\"\n//                     name=\"fname\"\n//                     value={formData.fname}\n//                     onChange={handleChange}\n//                   />\n//                 </FormControl>\n//                 <FormControl id=\"email\" isRequired mt={4}>\n//                   <FormLabel>Email</FormLabel>\n//                   <Input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                   />\n//                 </FormControl>\n//                 <FormControl id=\"password\" isRequired mt={4}>\n//                   <FormLabel>Password</FormLabel>\n//                   <Input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                   />\n//                 </FormControl>\n//                 <FormControl id=\"cpassword\" isRequired mt={4}>\n//                   <FormLabel>Confirm Password</FormLabel>\n//                   <Input\n//                     type=\"password\"\n//                     name=\"cpassword\"\n//                     value={formData.cpassword}\n//                     onChange={handleChange}\n//                   />\n//                 </FormControl>\n//                 <Button type=\"submit\" style={{ backgroundColor: '#1a365d',width:\"100%\",color:\"#fff\"}} mt={4}>\n//                   Next\n//                 </Button>\n//               </form>\n//               <button class=\"mt-2 text-center text-gray-500 hover:text-pink-900\"  onClick={navlogin}> if you have already account, login now</button>\n//             </Box>\n//           </div>\n//         </Box>\n//       </div>\n//       <ToastContainer /> \n//     </ChakraProvider>\n//   );\n// };\n// export default Register;\nimport React, { useState } from \"react\";\nimport { Box, Button, FormControl, FormLabel, Input, Select // Add Select component for dropdown\n} from \"@chakra-ui/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./mix.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\",\n    role: \"user\" // Set default role to \"user\"\n\n  });\n  const history = useNavigate();\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Form validation\n\n    if (!formData.fname || !formData.email || !formData.password || !formData.cpassword) {\n      return toast.error(\"Please fill in all fields\");\n    }\n\n    if (formData.password !== formData.cpassword) {\n      return toast.error(\"Password and Confirm Password do not match\");\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:8009/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData) // Send formData including role\n\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to register\");\n      }\n\n      history(\"/register-userdata\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to register\");\n    }\n  };\n\n  const navlogin = () => {\n    history(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-background\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: \"md\",\n        mx: \"auto\",\n        p: \"6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-30 bg-gray-100 rounded-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-black font-bold text-3xl p-5\",\n              children: \"Welcome Topjobs !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-black font-bold p-2\",\n              children: \"Hi, Get started for free - Register today!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"fname\",\n                isRequired: true,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"fname\",\n                  value: formData.fname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"email\",\n                isRequired: true,\n                mt: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"email\",\n                  name: \"email\",\n                  value: formData.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"password\",\n                isRequired: true,\n                mt: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"cpassword\",\n                isRequired: true,\n                mt: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"cpassword\",\n                  value: formData.cpassword,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"role\",\n                isRequired: true,\n                mt: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"role\",\n                  value: formData.role,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"user\",\n                    children: \"User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"consultant\",\n                    children: \"Consultant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                style: {\n                  backgroundColor: '#1a365d',\n                  width: \"100%\",\n                  color: \"#fff\"\n                },\n                mt: 4,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mt-2 text-center text-gray-500 hover:text-pink-900\",\n              onClick: navlogin,\n              children: \"If you already have an account, login now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"NmzT+eDaPGr3A9H6yuymL8MsnBo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","Select","ChakraProvider","useNavigate","ToastContainer","toast","Register","formData","setFormData","fname","email","password","cpassword","role","history","handleChange","e","target","name","value","handleSubmit","preventDefault","error","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","navlogin","backgroundColor","width","color"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   FormControl,\r\n//   FormLabel,\r\n//   Input,\r\n// } from \"@chakra-ui/react\";\r\n// import { ChakraProvider } from \"@chakra-ui/react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import \"./mix.css\";\r\n\r\n// const Register = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     fname: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     cpassword: \"\"\r\n//   });\r\n//   const history = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Form validation\r\n//     if (!formData.fname || !formData.email || !formData.password || !formData.cpassword) {\r\n//       return toast.error(\"Please fill in all fields\");\r\n//     }\r\n\r\n//     if (formData.password !== formData.cpassword) {\r\n//       return toast.error(\"Password and Confirm Password do not match\");\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8009/register\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\"\r\n//         },\r\n//         body: JSON.stringify({\r\n//           ...formData,\r\n//           role: \"user\"\r\n//         })\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to register\");\r\n//       }\r\n\r\n      \r\n//       // toast.success(\"Registration successful!\");\r\n//       history(\"/login\"); \r\n//     } catch (error) {\r\n//       console.error(error); \r\n//       toast.error(\"Failed to register\");\r\n//     }\r\n//   };\r\n\r\n\r\n//   const navlogin = ()=>{\r\n//     history(\"/login\"); \r\n\r\n//   }\r\n\r\n//   return (\r\n//     <ChakraProvider>\r\n//       <div className=\"form-background\">\r\n//         <Box maxW=\"md\" mx=\"auto\" p=\"6\">\r\n//           <div className=\"m-30 bg-gray-100 rounded-xl\">\r\n//           <div className=\"form_heading\">\r\n//                         <h1 className=\"text-black font-bold text-3xl p-5\">Welcome Topjobs !</h1>\r\n//                         <p className=\"text-black font-bold p-2\">Hi, Get started for free - Register today!</p>\r\n//                     </div>\r\n//             <Box p={4}>\r\n//               <form onSubmit={handleSubmit}>\r\n//                 <FormControl id=\"fname\" isRequired>\r\n//                   <FormLabel>Full Name</FormLabel>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     name=\"fname\"\r\n//                     value={formData.fname}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </FormControl>\r\n//                 <FormControl id=\"email\" isRequired mt={4}>\r\n//                   <FormLabel>Email</FormLabel>\r\n//                   <Input\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     value={formData.email}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </FormControl>\r\n//                 <FormControl id=\"password\" isRequired mt={4}>\r\n//                   <FormLabel>Password</FormLabel>\r\n//                   <Input\r\n//                     type=\"password\"\r\n//                     name=\"password\"\r\n//                     value={formData.password}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </FormControl>\r\n//                 <FormControl id=\"cpassword\" isRequired mt={4}>\r\n//                   <FormLabel>Confirm Password</FormLabel>\r\n//                   <Input\r\n//                     type=\"password\"\r\n//                     name=\"cpassword\"\r\n//                     value={formData.cpassword}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </FormControl>\r\n//                 <Button type=\"submit\" style={{ backgroundColor: '#1a365d',width:\"100%\",color:\"#fff\"}} mt={4}>\r\n//                   Next\r\n//                 </Button>\r\n\r\n              \r\n//               </form>\r\n//               <button class=\"mt-2 text-center text-gray-500 hover:text-pink-900\"  onClick={navlogin}> if you have already account, login now</button>\r\n//             </Box>\r\n//           </div>\r\n//         </Box>\r\n//       </div>\r\n//       <ToastContainer /> \r\n//     </ChakraProvider>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Select, // Add Select component for dropdown\r\n} from \"@chakra-ui/react\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./mix.css\";\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    fname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n    role: \"user\", // Set default role to \"user\"\r\n  });\r\n  const history = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Form validation\r\n    if (!formData.fname || !formData.email || !formData.password || !formData.cpassword) {\r\n      return toast.error(\"Please fill in all fields\");\r\n    }\r\n\r\n    if (formData.password !== formData.cpassword) {\r\n      return toast.error(\"Password and Confirm Password do not match\");\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8009/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(formData) // Send formData including role\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to register\");\r\n      }\r\n\r\n      history(\"/register-userdata\"); \r\n    } catch (error) {\r\n      console.error(error); \r\n      toast.error(\"Failed to register\");\r\n    }\r\n  };\r\n\r\n  const navlogin = () => {\r\n    history(\"/login\"); \r\n  }\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <div className=\"form-background\">\r\n        <Box maxW=\"md\" mx=\"auto\" p=\"6\">\r\n          <div className=\"m-30 bg-gray-100 rounded-xl\">\r\n            <div className=\"form_heading\">\r\n              <h1 className=\"text-black font-bold text-3xl p-5\">Welcome Topjobs !</h1>\r\n              <p className=\"text-black font-bold p-2\">Hi, Get started for free - Register today!</p>\r\n            </div>\r\n            <Box p={4}>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl id=\"fname\" isRequired>\r\n                  <FormLabel>Full Name</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"fname\"\r\n                    value={formData.fname}\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"email\" isRequired mt={4}>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"password\" isRequired mt={4}>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"cpassword\" isRequired mt={4}>\r\n                  <FormLabel>Confirm Password</FormLabel>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"cpassword\"\r\n                    value={formData.cpassword}\r\n                    onChange={handleChange}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"role\" isRequired mt={4}>\r\n                  <FormLabel>Role</FormLabel>\r\n                  <Select\r\n                    name=\"role\"\r\n                    value={formData.role}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"consultant\">Consultant</option>\r\n                  </Select>\r\n                </FormControl>\r\n                <Button type=\"submit\" style={{ backgroundColor: '#1a365d',width:\"100%\",color:\"#fff\"}} mt={4}>\r\n                  Next\r\n                </Button>\r\n              </form>\r\n              <button className=\"mt-2 text-center text-gray-500 hover:text-pink-900\"  onClick={navlogin}>If you already have an account, login now</button>\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n      </div>\r\n      <ToastContainer /> \r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,MANF,CAMU;AANV,OAOO,kBAPP;AAQA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAO,WAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;IACvCc,KAAK,EAAE,EADgC;IAEvCC,KAAK,EAAE,EAFgC;IAGvCC,QAAQ,EAAE,EAH6B;IAIvCC,SAAS,EAAE,EAJ4B;IAKvCC,IAAI,EAAE,MALiC,CAKzB;;EALyB,CAAD,CAAxC;EAOA,MAAMC,OAAO,GAAGX,WAAW,EAA3B;;EAEA,MAAMY,YAAY,GAAIC,CAAD,IAAO;IAC1BR,WAAW,CAAC,EAAE,GAAGD,QAAL;MAAe,CAACS,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAAzC,CAAD,CAAX;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAa;IAChCA,CAAC,CAACK,cAAF,GADgC,CAGhC;;IACA,IAAI,CAACd,QAAQ,CAACE,KAAV,IAAmB,CAACF,QAAQ,CAACG,KAA7B,IAAsC,CAACH,QAAQ,CAACI,QAAhD,IAA4D,CAACJ,QAAQ,CAACK,SAA1E,EAAqF;MACnF,OAAOP,KAAK,CAACiB,KAAN,CAAY,2BAAZ,CAAP;IACD;;IAED,IAAIf,QAAQ,CAACI,QAAT,KAAsBJ,QAAQ,CAACK,SAAnC,EAA8C;MAC5C,OAAOP,KAAK,CAACiB,KAAN,CAAY,4CAAZ,CAAP;IACD;;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;QAC7DC,MAAM,EAAE,MADqD;QAE7DC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFoD;QAK7DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,QAAf,CALuD,CAK9B;;MAL8B,CAAnC,CAA5B;;MAQA,IAAI,CAACgB,QAAQ,CAACO,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;MACD;;MAEDjB,OAAO,CAAC,oBAAD,CAAP;IACD,CAdD,CAcE,OAAOQ,KAAP,EAAc;MACdU,OAAO,CAACV,KAAR,CAAcA,KAAd;MACAjB,KAAK,CAACiB,KAAN,CAAY,oBAAZ;IACD;EACF,CA9BD;;EAgCA,MAAMW,QAAQ,GAAG,MAAM;IACrBnB,OAAO,CAAC,QAAD,CAAP;EACD,CAFD;;EAIA,oBACE,QAAC,cAAD;IAAA,wBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE,QAAC,GAAD;QAAK,IAAI,EAAC,IAAV;QAAe,EAAE,EAAC,MAAlB;QAAyB,CAAC,EAAC,GAA3B;QAAA,uBACE;UAAK,SAAS,EAAC,6BAAf;UAAA,wBACE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAI,SAAS,EAAC,mCAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAG,SAAS,EAAC,0BAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAKE,QAAC,GAAD;YAAK,CAAC,EAAE,CAAR;YAAA,wBACE;cAAM,QAAQ,EAAEM,YAAhB;cAAA,wBACE,QAAC,WAAD;gBAAa,EAAE,EAAC,OAAhB;gBAAwB,UAAU,MAAlC;gBAAA,wBACE,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,KAAD;kBACE,IAAI,EAAC,MADP;kBAEE,IAAI,EAAC,OAFP;kBAGE,KAAK,EAAEb,QAAQ,CAACE,KAHlB;kBAIE,QAAQ,EAAEM;gBAJZ;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAUE,QAAC,WAAD;gBAAa,EAAE,EAAC,OAAhB;gBAAwB,UAAU,MAAlC;gBAAmC,EAAE,EAAE,CAAvC;gBAAA,wBACE,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,KAAD;kBACE,IAAI,EAAC,OADP;kBAEE,IAAI,EAAC,OAFP;kBAGE,KAAK,EAAER,QAAQ,CAACG,KAHlB;kBAIE,QAAQ,EAAEK;gBAJZ;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAVF,eAmBE,QAAC,WAAD;gBAAa,EAAE,EAAC,UAAhB;gBAA2B,UAAU,MAArC;gBAAsC,EAAE,EAAE,CAA1C;gBAAA,wBACE,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,KAAD;kBACE,IAAI,EAAC,UADP;kBAEE,IAAI,EAAC,UAFP;kBAGE,KAAK,EAAER,QAAQ,CAACI,QAHlB;kBAIE,QAAQ,EAAEI;gBAJZ;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAnBF,eA4BE,QAAC,WAAD;gBAAa,EAAE,EAAC,WAAhB;gBAA4B,UAAU,MAAtC;gBAAuC,EAAE,EAAE,CAA3C;gBAAA,wBACE,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,KAAD;kBACE,IAAI,EAAC,UADP;kBAEE,IAAI,EAAC,WAFP;kBAGE,KAAK,EAAER,QAAQ,CAACK,SAHlB;kBAIE,QAAQ,EAAEG;gBAJZ;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QA5BF,eAqCE,QAAC,WAAD;gBAAa,EAAE,EAAC,MAAhB;gBAAuB,UAAU,MAAjC;gBAAkC,EAAE,EAAE,CAAtC;gBAAA,wBACE,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE,QAAC,MAAD;kBACE,IAAI,EAAC,MADP;kBAEE,KAAK,EAAER,QAAQ,CAACM,IAFlB;kBAGE,QAAQ,EAAEE,YAHZ;kBAAA,wBAKE;oBAAQ,KAAK,EAAC,MAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QALF,eAME;oBAAQ,KAAK,EAAC,YAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QANF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QArCF,eAgDE,QAAC,MAAD;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,KAAK,EAAE;kBAAEmB,eAAe,EAAE,SAAnB;kBAA6BC,KAAK,EAAC,MAAnC;kBAA0CC,KAAK,EAAC;gBAAhD,CAA7B;gBAAsF,EAAE,EAAE,CAA1F;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAhDF;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAqDE;cAAQ,SAAS,EAAC,oDAAlB;cAAwE,OAAO,EAAEH,QAAjF;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QArDF;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAkEE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAlEF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsED,CAxHD;;GAAM3B,Q;UAQYH,W;;;KARZG,Q;AA0HN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}