{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react'\n// import { NavLink } from \"react-router-dom\"\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import \"./mix.css\"\n// const Register = () => {\n//     const [passShow, setPassShow] = useState(false);\n//     const [cpassShow, setCPassShow] = useState(false);\n//     const [inpval, setInpval] = useState({\n//         fname: \"\",\n//         email: \"\",\n//         password: \"\",\n//         cpassword: \"\"\n//     });\n//     const setVal = (e) => {\n//         // console.log(e.target.value);\n//         const { name, value } = e.target;\n//         setInpval(() => {\n//             return {\n//                 ...inpval,\n//                 [name]: value\n//             }\n//         })\n//     };\n//     const addUserdata = async (e) => {\n//         e.preventDefault();\n//         const { fname, email, password, cpassword } = inpval;\n//         if (fname === \"\") {\n//             toast.warning(\"fname is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (email === \"\") {\n//             toast.error(\"email is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (!email.includes(\"@\")) {\n//             toast.warning(\"includes @ in your email!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password === \"\") {\n//             toast.error(\"password is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password.length < 6) {\n//             toast.error(\"password must be 6 char!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (cpassword === \"\") {\n//             toast.error(\"cpassword is required!\", {\n//                 position: \"top-center\"\n//             });\n//         }\n//         else if (cpassword.length < 6) {\n//             toast.error(\"confirm password must be 6 char!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password !== cpassword) {\n//             toast.error(\"pass and Cpass are not matching!\", {\n//                 position: \"top-center\"\n//             });\n//         } else {\n//             // console.log(\"user registration succesfully done\");\n//             const data = await fetch(\"/register\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify({\n//                     fname, email, password, cpassword\n//                 })\n//             });\n//             const res = await data.json();\n//             // console.log(res.status);\n//             if (res.status === 201) {\n//                 // toast.success(\"Registration Successfully done ðŸ˜ƒ!\", {\n//                 //     position: \"top-center\"\n//                 // });\n//                 setInpval({ ...inpval, fname: \"\", email: \"\", password: \"\", cpassword: \"\" });\n//             }\n//         }\n//     }\n//     return (\n//         <>\n//             <section className='form-background'>\n//                 <div className=\"form_data\">\n//                     <div className=\"form_heading\">\n//                         <h1>Sign Up</h1>\n//                         <p style={{ textAlign: \"center\",margin:\"5\" }}>Globalize Your Career: Expert Consultation Tailored to Your Ambitions!</p>\n//                     </div>\n//                     <form>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"fname\">Name</label>\n//                             <input type=\"text\" onChange={setVal} value={inpval.fname} name=\"fname\" id=\"fname\" placeholder='Enter Your Name' />\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"email\">Email</label>\n//                             <input type=\"email\" onChange={setVal} value={inpval.email} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <div className=\"two\">\n//                                 <input type={!passShow ? \"password\" : \"text\"} value={inpval.password} onChange={setVal} name=\"password\" id=\"password\" placeholder='Enter Your password' />\n//                                 <div className=\"showpass\" onClick={() => setPassShow(!passShow)}>\n//                                     {!passShow ? \"Show\" : \"Hide\"}\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"password\">Confirm Password</label>\n//                             <div className=\"two\">\n//                                 <input type={!cpassShow ? \"password\" : \"text\"} value={inpval.cpassword} onChange={setVal} name=\"cpassword\" id=\"cpassword\" placeholder='Confirm password' />\n//                                 <div className=\"showpass\" onClick={() => setCPassShow(!cpassShow)}>\n//                                     {!cpassShow ? \"Show\" : \"Hide\"}\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <button className='btn' onClick={addUserdata}>Next</button>\n//                         <p>Already have an account? <NavLink to=\"/\">Log In</NavLink></p>\n//                     </form>\n//                     <ToastContainer />\n//                 </div>\n//             </section>\n//         </>\n//     )\n// }\n// export default Register\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [currentStep, setCurrentStep] = useState(1); // Manage form steps\n\n  const handleRegistrationSubmit = async e => {\n    e.preventDefault(); // Implement registration logic here\n    // If registration is successful, move to next step\n\n    setCurrentStep(2);\n  };\n\n  const handleDetailsSubmit = async e => {\n    e.preventDefault(); // Implement details submission logic here, including photo upload\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegistrationSubmit,\n      className: \"bg=blue-500\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleRegistrationSubmit,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDetailsSubmit,\n      className: \"bg-red-200\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"Zx2FzPyJq3Um4yZ93PecHmkcsLU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","Register","currentStep","setCurrentStep","handleRegistrationSubmit","e","preventDefault","handleDetailsSubmit"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import { NavLink } from \"react-router-dom\"\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import \"./mix.css\"\r\n\r\n// const Register = () => {\r\n\r\n//     const [passShow, setPassShow] = useState(false);\r\n//     const [cpassShow, setCPassShow] = useState(false);\r\n\r\n//     const [inpval, setInpval] = useState({\r\n//         fname: \"\",\r\n//         email: \"\",\r\n//         password: \"\",\r\n//         cpassword: \"\"\r\n//     });\r\n\r\n\r\n//     const setVal = (e) => {\r\n//         // console.log(e.target.value);\r\n//         const { name, value } = e.target;\r\n\r\n//         setInpval(() => {\r\n//             return {\r\n//                 ...inpval,\r\n//                 [name]: value\r\n//             }\r\n//         })\r\n//     };\r\n\r\n//     const addUserdata = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         const { fname, email, password, cpassword } = inpval;\r\n\r\n//         if (fname === \"\") {\r\n//             toast.warning(\"fname is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (email === \"\") {\r\n//             toast.error(\"email is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (!email.includes(\"@\")) {\r\n//             toast.warning(\"includes @ in your email!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password === \"\") {\r\n//             toast.error(\"password is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password.length < 6) {\r\n//             toast.error(\"password must be 6 char!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (cpassword === \"\") {\r\n//             toast.error(\"cpassword is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         }\r\n//         else if (cpassword.length < 6) {\r\n//             toast.error(\"confirm password must be 6 char!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password !== cpassword) {\r\n//             toast.error(\"pass and Cpass are not matching!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else {\r\n//             // console.log(\"user registration succesfully done\");\r\n\r\n\r\n//             const data = await fetch(\"/register\", {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\"\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     fname, email, password, cpassword\r\n//                 })\r\n//             });\r\n\r\n//             const res = await data.json();\r\n//             // console.log(res.status);\r\n\r\n//             if (res.status === 201) {\r\n//                 // toast.success(\"Registration Successfully done ðŸ˜ƒ!\", {\r\n//                 //     position: \"top-center\"\r\n//                 // });\r\n//                 setInpval({ ...inpval, fname: \"\", email: \"\", password: \"\", cpassword: \"\" });\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <section className='form-background'>\r\n//                 <div className=\"form_data\">\r\n//                     <div className=\"form_heading\">\r\n//                         <h1>Sign Up</h1>\r\n//                         <p style={{ textAlign: \"center\",margin:\"5\" }}>Globalize Your Career: Expert Consultation Tailored to Your Ambitions!</p>\r\n//                     </div>\r\n\r\n//                     <form>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"fname\">Name</label>\r\n//                             <input type=\"text\" onChange={setVal} value={inpval.fname} name=\"fname\" id=\"fname\" placeholder='Enter Your Name' />\r\n//                         </div>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"email\">Email</label>\r\n//                             <input type=\"email\" onChange={setVal} value={inpval.email} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\r\n//                         </div>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <div className=\"two\">\r\n//                                 <input type={!passShow ? \"password\" : \"text\"} value={inpval.password} onChange={setVal} name=\"password\" id=\"password\" placeholder='Enter Your password' />\r\n//                                 <div className=\"showpass\" onClick={() => setPassShow(!passShow)}>\r\n//                                     {!passShow ? \"Show\" : \"Hide\"}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"password\">Confirm Password</label>\r\n//                             <div className=\"two\">\r\n//                                 <input type={!cpassShow ? \"password\" : \"text\"} value={inpval.cpassword} onChange={setVal} name=\"cpassword\" id=\"cpassword\" placeholder='Confirm password' />\r\n//                                 <div className=\"showpass\" onClick={() => setCPassShow(!cpassShow)}>\r\n//                                     {!cpassShow ? \"Show\" : \"Hide\"}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <button className='btn' onClick={addUserdata}>Next</button>\r\n//                         <p>Already have an account? <NavLink to=\"/\">Log In</NavLink></p>\r\n//                     </form>\r\n//                     <ToastContainer />\r\n//                 </div>\r\n//             </section>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Register\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Register = () => {\r\n  const [currentStep, setCurrentStep] = useState(1); // Manage form steps\r\n  \r\n\r\n  const handleRegistrationSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Implement registration logic here\r\n    // If registration is successful, move to next step\r\n    setCurrentStep(2);\r\n  };\r\n\r\n  const handleDetailsSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Implement details submission logic here, including photo upload\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentStep === 1 && (\r\n        <form onSubmit={handleRegistrationSubmit} className='bg=blue-500'>\r\n         \r\n          <button type=\"submit\" onClick={handleRegistrationSubmit}>Next</button>\r\n        </form>\r\n      )}\r\n      {currentStep === 2 && (\r\n        <form onSubmit={handleDetailsSubmit} className='bg-red-200'>\r\n          \r\n          <button type=\"submit\">Submit Details</button>\r\n        </form>\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C,CADqB,CAC8B;;EAGnD,MAAMM,wBAAwB,GAAG,MAAOC,CAAP,IAAa;IAC5CA,CAAC,CAACC,cAAF,GAD4C,CAE5C;IACA;;IACAH,cAAc,CAAC,CAAD,CAAd;EACD,CALD;;EAOA,MAAMI,mBAAmB,GAAG,MAAOF,CAAP,IAAa;IACvCA,CAAC,CAACC,cAAF,GADuC,CAEvC;EACD,CAHD;;EAKA,oBACE;IAAA,WACGJ,WAAW,KAAK,CAAhB,iBACC;MAAM,QAAQ,EAAEE,wBAAhB;MAA0C,SAAS,EAAC,aAApD;MAAA,uBAEE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEA,wBAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QAFJ,EAOGF,WAAW,KAAK,CAAhB,iBACC;MAAM,QAAQ,EAAEK,mBAAhB;MAAqC,SAAS,EAAC,YAA/C;MAAA,uBAEE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QARJ,eAaE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA,gBADF;AAiBD,CAjCD;;GAAMN,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}