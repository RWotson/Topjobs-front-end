{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react'\n// import { NavLink } from \"react-router-dom\"\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import \"./mix.css\"\n// const Register = () => {\n//   const [currentStep, setCurrentStep] = useState(1); // Manage form steps\n//     const [passShow, setPassShow] = useState(false);\n//     const [cpassShow, setCPassShow] = useState(false);\n//     const [inpval, setInpval] = useState({\n//         fname: \"\",\n//         email: \"\",\n//         password: \"\",\n//         cpassword: \"\"\n//     });\n//     const setVal = (e) => {\n//         // console.log(e.target.value);\n//         const { name, value } = e.target;\n//         setInpval(() => {\n//             return {\n//                 ...inpval,\n//                 [name]: value\n//             }\n//         })\n//     };\n//     const addUserdata = async (e) => {\n//         e.preventDefault();\n//         const { fname, email, password, cpassword } = inpval;\n//         if (fname === \"\") {\n//             toast.warning(\"fname is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (email === \"\") {\n//             toast.error(\"email is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (!email.includes(\"@\")) {\n//             toast.warning(\"includes @ in your email!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password === \"\") {\n//             toast.error(\"password is required!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password.length < 6) {\n//             toast.error(\"password must be 6 char!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (cpassword === \"\") {\n//             toast.error(\"cpassword is required!\", {\n//                 position: \"top-center\"\n//             });\n//         }\n//         else if (cpassword.length < 6) {\n//             toast.error(\"confirm password must be 6 char!\", {\n//                 position: \"top-center\"\n//             });\n//         } else if (password !== cpassword) {\n//             toast.error(\"pass and Cpass are not matching!\", {\n//                 position: \"top-center\"\n//             });\n//         } else {\n//             // console.log(\"user registration succesfully done\");\n//             const data = await fetch(\"/register\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify({\n//                     fname, email, password, cpassword\n//                 })\n//             });\n//             const res = await data.json();\n//             // console.log(res.status);\n//             if (res.status === 201) {\n//                 console.log(res.status);\n//                 setCurrentStep(2);\n//                 // toast.success(\"Registration Successfully done ðŸ˜ƒ!\", {\n//                 //     position: \"top-center\"\n//                 // });\n//                 setInpval({ ...inpval, fname: \"\", email: \"\", password: \"\", cpassword: \"\" });\n//             }\n//         }\n//     }\n//     const [fullName, setFullName] = useState('');\n//     const [address, setAddress] = useState('');\n//     const [dob, setDob] = useState('');\n//     const [nic, setNic] = useState('');\n//     const [telephone, setTelephone] = useState('');\n//     const [weight, setWeight] = useState('');\n//     const [height, setHeight] = useState('');\n//     const [availability, setAvailability] = useState('');\n//     const [nationality, setNationality] = useState('');\n//     const [consultantType, setConsultantType] = useState('');\n//     const [availableTime, setAvailableTime] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [photo, setPhoto] = useState('');\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const formData = new FormData();\n//         formData.append('fullName', fullName);\n//         formData.append('address', address);\n//         formData.append('dob', dob);\n//         formData.append('nic', nic);\n//         formData.append('telephone', telephone);\n//         formData.append('weight', weight);\n//         formData.append('height', height);\n//         formData.append('available', availability); // Make sure this matches the backend field name\n//         formData.append('nationality', nationality);\n//         formData.append('ConsultantType', consultantType); // Ensure correct field name as backend expects\n//         formData.append('availableTime', availableTime);\n//         formData.append('Description', description); // Ensure correct field name as backend expects\n//         formData.append('photo', photo); // Add file to FormData\n//         try {\n//             const response = await fetch('http://localhost:8009/user/profile', {\n//                 method: 'POST',\n//                 body: formData, // Use formData instead of JSON\n//                 // Don't set 'Content-Type': 'application/json', let the browser set the content type for FormData\n//             });\n//             const data = await response.json();\n//             console.log(data);\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     };\n//   return (\n//     <>\n//       {currentStep === 1 && (\n//         <>\n//             <section className='form-background'>\n//                 <div className=\"form_data\">\n//                     <div className=\"form_heading\">\n//                         <h1>Sign Up</h1>\n//                         <p style={{ textAlign: \"center\",margin:\"5\" }}>Globalize Your Career: Expert Consultation Tailored to Your Ambitions!</p>\n//                     </div>\n//                     <form>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"fname\">Name</label>\n//                             <input type=\"text\" onChange={setVal} value={inpval.fname} name=\"fname\" id=\"fname\" placeholder='Enter Your Name' />\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"email\">Email</label>\n//                             <input type=\"email\" onChange={setVal} value={inpval.email} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <div className=\"two\">\n//                                 <input type={!passShow ? \"password\" : \"text\"} value={inpval.password} onChange={setVal} name=\"password\" id=\"password\" placeholder='Enter Your password' />\n//                                 <div className=\"showpass\" onClick={() => setPassShow(!passShow)}>\n//                                     {!passShow ? \"Show\" : \"Hide\"}\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <div className=\"form_input\">\n//                             <label htmlFor=\"password\">Confirm Password</label>\n//                             <div className=\"two\">\n//                                 <input type={!cpassShow ? \"password\" : \"text\"} value={inpval.cpassword} onChange={setVal} name=\"cpassword\" id=\"cpassword\" placeholder='Confirm password' />\n//                                 <div className=\"showpass\" onClick={() => setCPassShow(!cpassShow)}>\n//                                     {!cpassShow ? \"Show\" : \"Hide\"}\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         <button className='btn' onClick={addUserdata}>Next</button>\n//                         <p>Already have an account? <NavLink to=\"/\">Log In</NavLink></p>\n//                     </form>\n//                     <ToastContainer />\n//                 </div>\n//             </section>\n//         </>\n//       )}\n//       {currentStep === 2 && (\n//          <div className=\"form-background\">\n//          <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 m-20\">\n//            <form onSubmit={handleSubmit}>\n//              <input type=\"text\" placeholder=\"Full Name\" value={fullName} onChange={(e) => setFullName(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"date\" placeholder=\"Date of Birth\" value={dob} onChange={(e) => setDob(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"NIC\" value={nic} onChange={(e) => setNic(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"tel\" placeholder=\"Telephone\" value={telephone} onChange={(e) => setTelephone(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"number\" placeholder=\"Weight\" value={weight} onChange={(e) => setWeight(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"number\" placeholder=\"Height\" value={height} onChange={(e) => setHeight(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Availability\" value={availability} onChange={(e) => setAvailability(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Nationality\" value={nationality} onChange={(e) => setNationality(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Consultant Type\" value={consultantType} onChange={(e) => setConsultantType(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Available Time\" value={availableTime} onChange={(e) => setAvailableTime(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\n//              <input type=\"file\" onChange={(e) => setPhoto(e.target.files[0])} />\n//              <button type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Submit</button>\n//            </form>\n//          </div>\n//        </div>\n//       )}\n//       <ToastContainer />\n//     </>\n//   );\n// };\n// export default Register;\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack } from '@chakra-ui/react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    role: '',\n    designation: '',\n    education: '',\n    address: '',\n    dob: '',\n    nic: '',\n    telephoneNumber: '',\n    available: '',\n    nationality: '',\n    consultantType: '',\n    availableTime: '',\n    description: '',\n    photo: null,\n    cv: null\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: files[0]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formDataToSend = new FormData();\n\n    for (let key in formData) {\n      formDataToSend.append(key, formData[key]);\n    } // Send formDataToSend to backend using fetch or axios\n\n\n    console.log('Form submitted:', formDataToSend);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"md\",\n    mx: \"auto\",\n    p: \"6\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"cpassword\",\n            value: formData.cpassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            name: \"photo\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Upload CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            name: \"cv\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"blue\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"MdkfPnBrnIKMsd9TEit6WMMKRLY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","VStack","ChakraProvider","Register","formData","setFormData","firstName","lastName","email","password","cpassword","role","designation","education","address","dob","nic","telephoneNumber","available","nationality","consultantType","availableTime","description","photo","cv","handleChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","formDataToSend","FormData","key","append","console","log"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import { NavLink } from \"react-router-dom\"\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import \"./mix.css\"\r\n\r\n// const Register = () => {\r\n//   const [currentStep, setCurrentStep] = useState(1); // Manage form steps\r\n\r\n//     const [passShow, setPassShow] = useState(false);\r\n//     const [cpassShow, setCPassShow] = useState(false);\r\n    \r\n\r\n//     const [inpval, setInpval] = useState({\r\n//         fname: \"\",\r\n//         email: \"\",\r\n//         password: \"\",\r\n//         cpassword: \"\"\r\n//     });\r\n\r\n\r\n//     const setVal = (e) => {\r\n//         // console.log(e.target.value);\r\n//         const { name, value } = e.target;\r\n\r\n//         setInpval(() => {\r\n//             return {\r\n//                 ...inpval,\r\n//                 [name]: value\r\n//             }\r\n//         })\r\n//     };\r\n\r\n//     const addUserdata = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         const { fname, email, password, cpassword } = inpval;\r\n\r\n//         if (fname === \"\") {\r\n//             toast.warning(\"fname is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (email === \"\") {\r\n//             toast.error(\"email is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (!email.includes(\"@\")) {\r\n//             toast.warning(\"includes @ in your email!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password === \"\") {\r\n//             toast.error(\"password is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password.length < 6) {\r\n//             toast.error(\"password must be 6 char!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (cpassword === \"\") {\r\n//             toast.error(\"cpassword is required!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         }\r\n//         else if (cpassword.length < 6) {\r\n//             toast.error(\"confirm password must be 6 char!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else if (password !== cpassword) {\r\n//             toast.error(\"pass and Cpass are not matching!\", {\r\n//                 position: \"top-center\"\r\n//             });\r\n//         } else {\r\n//             // console.log(\"user registration succesfully done\");\r\n\r\n\r\n//             const data = await fetch(\"/register\", {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\"\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     fname, email, password, cpassword\r\n//                 })\r\n//             });\r\n\r\n//             const res = await data.json();\r\n            \r\n//             // console.log(res.status);\r\n\r\n//             if (res.status === 201) {\r\n//                 console.log(res.status);\r\n//                 setCurrentStep(2);\r\n//                 // toast.success(\"Registration Successfully done ðŸ˜ƒ!\", {\r\n//                 //     position: \"top-center\"\r\n//                 // });\r\n//                 setInpval({ ...inpval, fname: \"\", email: \"\", password: \"\", cpassword: \"\" });\r\n//             }\r\n//         }\r\n//     }\r\n  \r\n//     const [fullName, setFullName] = useState('');\r\n//     const [address, setAddress] = useState('');\r\n//     const [dob, setDob] = useState('');\r\n//     const [nic, setNic] = useState('');\r\n//     const [telephone, setTelephone] = useState('');\r\n    \r\n//     const [weight, setWeight] = useState('');\r\n//     const [height, setHeight] = useState('');\r\n//     const [availability, setAvailability] = useState('');\r\n//     const [nationality, setNationality] = useState('');\r\n//     const [consultantType, setConsultantType] = useState('');\r\n//     const [availableTime, setAvailableTime] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n//     const [photo, setPhoto] = useState('');\r\n    \r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const formData = new FormData();\r\n//         formData.append('fullName', fullName);\r\n//         formData.append('address', address);\r\n//         formData.append('dob', dob);\r\n//         formData.append('nic', nic);\r\n//         formData.append('telephone', telephone);\r\n//         formData.append('weight', weight);\r\n//         formData.append('height', height);\r\n//         formData.append('available', availability); // Make sure this matches the backend field name\r\n//         formData.append('nationality', nationality);\r\n//         formData.append('ConsultantType', consultantType); // Ensure correct field name as backend expects\r\n//         formData.append('availableTime', availableTime);\r\n//         formData.append('Description', description); // Ensure correct field name as backend expects\r\n//         formData.append('photo', photo); // Add file to FormData\r\n    \r\n//         try {\r\n//             const response = await fetch('http://localhost:8009/user/profile', {\r\n//                 method: 'POST',\r\n//                 body: formData, // Use formData instead of JSON\r\n//                 // Don't set 'Content-Type': 'application/json', let the browser set the content type for FormData\r\n//             });\r\n            \r\n//             const data = await response.json();\r\n//             console.log(data);\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     };\r\n    \r\n    \r\n  \r\n//   return (\r\n//     <>\r\n//       {currentStep === 1 && (\r\n//         <>\r\n//             <section className='form-background'>\r\n//                 <div className=\"form_data\">\r\n//                     <div className=\"form_heading\">\r\n//                         <h1>Sign Up</h1>\r\n//                         <p style={{ textAlign: \"center\",margin:\"5\" }}>Globalize Your Career: Expert Consultation Tailored to Your Ambitions!</p>\r\n//                     </div>\r\n\r\n//                     <form>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"fname\">Name</label>\r\n//                             <input type=\"text\" onChange={setVal} value={inpval.fname} name=\"fname\" id=\"fname\" placeholder='Enter Your Name' />\r\n//                         </div>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"email\">Email</label>\r\n//                             <input type=\"email\" onChange={setVal} value={inpval.email} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\r\n//                         </div>\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <div className=\"two\">\r\n//                                 <input type={!passShow ? \"password\" : \"text\"} value={inpval.password} onChange={setVal} name=\"password\" id=\"password\" placeholder='Enter Your password' />\r\n//                                 <div className=\"showpass\" onClick={() => setPassShow(!passShow)}>\r\n//                                     {!passShow ? \"Show\" : \"Hide\"}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"form_input\">\r\n//                             <label htmlFor=\"password\">Confirm Password</label>\r\n//                             <div className=\"two\">\r\n//                                 <input type={!cpassShow ? \"password\" : \"text\"} value={inpval.cpassword} onChange={setVal} name=\"cpassword\" id=\"cpassword\" placeholder='Confirm password' />\r\n//                                 <div className=\"showpass\" onClick={() => setCPassShow(!cpassShow)}>\r\n//                                     {!cpassShow ? \"Show\" : \"Hide\"}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <button className='btn' onClick={addUserdata}>Next</button>\r\n//                         <p>Already have an account? <NavLink to=\"/\">Log In</NavLink></p>\r\n//                     </form>\r\n//                     <ToastContainer />\r\n//                 </div>\r\n//             </section>\r\n//         </>\r\n//       )}\r\n//       {currentStep === 2 && (\r\n//          <div className=\"form-background\">\r\n//          <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 m-20\">\r\n//            <form onSubmit={handleSubmit}>\r\n//              <input type=\"text\" placeholder=\"Full Name\" value={fullName} onChange={(e) => setFullName(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"date\" placeholder=\"Date of Birth\" value={dob} onChange={(e) => setDob(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"NIC\" value={nic} onChange={(e) => setNic(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"tel\" placeholder=\"Telephone\" value={telephone} onChange={(e) => setTelephone(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"number\" placeholder=\"Weight\" value={weight} onChange={(e) => setWeight(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"number\" placeholder=\"Height\" value={height} onChange={(e) => setHeight(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Availability\" value={availability} onChange={(e) => setAvailability(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Nationality\" value={nationality} onChange={(e) => setNationality(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Consultant Type\" value={consultantType} onChange={(e) => setConsultantType(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Available Time\" value={availableTime} onChange={(e) => setAvailableTime(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} className=\"mb-4 w-full px-3 py-2 border rounded\" />\r\n//              <input type=\"file\" onChange={(e) => setPhoto(e.target.files[0])} />\r\n//              <button type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Submit</button>\r\n//            </form>\r\n//          </div>\r\n//        </div>\r\n\r\n//       )}\r\n//       <ToastContainer />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Input, VStack } from '@chakra-ui/react';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        cpassword: '',\r\n        role: '',\r\n        designation: '',\r\n        education: '',\r\n        address: '',\r\n        dob: '',\r\n        nic: '',\r\n        telephoneNumber: '',\r\n        available: '',\r\n        nationality: '',\r\n        consultantType: '',\r\n        availableTime: '',\r\n        description: '',\r\n        photo: null,\r\n        cv: null\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { name, files } = e.target;\r\n        setFormData({ ...formData, [name]: files[0] });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formDataToSend = new FormData();\r\n        for (let key in formData) {\r\n            formDataToSend.append(key, formData[key]);\r\n        }\r\n        // Send formDataToSend to backend using fetch or axios\r\n        console.log('Form submitted:', formDataToSend);\r\n    };\r\n\r\n    return (\r\n        <Box maxW=\"md\" mx=\"auto\" p=\"6\">\r\n            <form onSubmit={handleSubmit}>\r\n                <VStack spacing=\"4\">\r\n                    <FormControl isRequired>\r\n                        <FormLabel>First Name</FormLabel>\r\n                        <Input name=\"firstName\" value={formData.firstName} onChange={handleChange} />\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <FormLabel>Last Name</FormLabel>\r\n                        <Input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <FormLabel>Email</FormLabel>\r\n                        <Input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <FormLabel>Password</FormLabel>\r\n                        <Input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n                    </FormControl>\r\n                    <FormControl isRequired>\r\n                        <FormLabel>Confirm Password</FormLabel>\r\n                        <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\r\n                    </FormControl>\r\n                    {/* Add more form fields for basic details */}\r\n                    <FormControl>\r\n                        <FormLabel>Upload Photo</FormLabel>\r\n                        <Input type=\"file\" name=\"photo\" onChange={handleFileChange} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormLabel>Upload CV</FormLabel>\r\n                        <Input type=\"file\" name=\"cv\" onChange={handleFileChange} />\r\n                    </FormControl>\r\n                    <Button type=\"submit\" colorScheme=\"blue\">Register</Button>\r\n                </VStack>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n\r\n"],"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"},"metadata":{},"sourceType":"module"}