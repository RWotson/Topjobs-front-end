{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\homepage\\\\BookAppoinment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookAppointment = () => {\n  _s();\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: \"\",\n    location: \"\",\n    description: \"\"\n  });\n  const [paymentData, setPaymentData] = useState({\n    amount: \"\",\n    // Set the amount based on your business logic\n    token: null\n  });\n  const history = useNavigate();\n\n  const handleAppointmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAppointmentData({ ...appointmentData,\n      [name]: value\n    });\n  };\n\n  const handlePaymentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPaymentData({ ...paymentData,\n      [name]: value\n    });\n  };\n\n  const handleSubmitAppointment = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/job-appointments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(appointmentData)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create job appointment\");\n      }\n\n      toast.success(\"Appointment booked successfully\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to book appointment\");\n    }\n  };\n\n  const handleSubmitPayment = async e => {\n    e.preventDefault();\n\n    try {\n      // Here you should integrate Stripe and obtain a token\n      // For the purpose of this example, we'll assume you already have a token\n      // Replace the 'stripeToken' with the actual token obtained from Stripe\n      const response = await fetch(\"/payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: paymentData.amount,\n          token: 'stripeToken'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to process payment\");\n      }\n\n      toast.success(\"Payment processed successfully\");\n      history(\"/dashboard\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to process payment\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-indigo-100 rounded-lg min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitAppointment,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          name: \"date\",\n          value: appointmentData.date,\n          onChange: handleAppointmentChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"location\",\n          value: appointmentData.location,\n          onChange: handleAppointmentChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"description\",\n          value: appointmentData.description,\n          onChange: handleAppointmentChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitPayment,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"amount\",\n          value: paymentData.amount,\n          onChange: handlePaymentChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Process Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookAppointment, \"b9zmAalSWTWcI/94wQV+Vp46fC4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BookAppointment;\nexport default BookAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Button","FormControl","FormLabel","Input","ToastContainer","toast","BookAppointment","appointmentData","setAppointmentData","date","location","description","paymentData","setPaymentData","amount","token","history","handleAppointmentChange","e","name","value","target","handlePaymentChange","handleSubmitAppointment","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","success","error","console","handleSubmitPayment"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/homepage/BookAppoinment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nconst BookAppointment = () => {\r\n  const [appointmentData, setAppointmentData] = useState({\r\n    date: \"\",\r\n    location: \"\",\r\n    description: \"\"\r\n  });\r\n  const [paymentData, setPaymentData] = useState({\r\n    amount: \"\", // Set the amount based on your business logic\r\n    token: null\r\n  });\r\n  const history = useNavigate();\r\n\r\n  const handleAppointmentChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAppointmentData({ ...appointmentData, [name]: value });\r\n  };\r\n\r\n  const handlePaymentChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPaymentData({ ...paymentData, [name]: value });\r\n  };\r\n\r\n  const handleSubmitAppointment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"/job-appointments\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(appointmentData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create job appointment\");\r\n      }\r\n      toast.success(\"Appointment booked successfully\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Failed to book appointment\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitPayment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Here you should integrate Stripe and obtain a token\r\n      // For the purpose of this example, we'll assume you already have a token\r\n      \r\n      // Replace the 'stripeToken' with the actual token obtained from Stripe\r\n      const response = await fetch(\"/payment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ amount: paymentData.amount, token: 'stripeToken' })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to process payment\");\r\n      }\r\n      toast.success(\"Payment processed successfully\");\r\n      history(\"/dashboard\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Failed to process payment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-indigo-100 rounded-lg min-h-screen p-4\">\r\n      <h1>Book Appointment</h1>\r\n      <form onSubmit={handleSubmitAppointment}>\r\n        <FormControl>\r\n          <FormLabel>Date</FormLabel>\r\n          <Input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={appointmentData.date}\r\n            onChange={handleAppointmentChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel>Location</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={appointmentData.location}\r\n            onChange={handleAppointmentChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel>Description</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={appointmentData.description}\r\n            onChange={handleAppointmentChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <Button type=\"submit\">Book Appointment</Button>\r\n      </form>\r\n\r\n      <h1>Payment</h1>\r\n      <form onSubmit={handleSubmitPayment}>\r\n        <FormControl>\r\n          <FormLabel>Amount</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            value={paymentData.amount}\r\n            onChange={handlePaymentChange}\r\n            required\r\n          />\r\n        </FormControl>\r\n        {/* Here you can add payment related fields, like card details for Stripe */}\r\n        <Button type=\"submit\">Process Payment</Button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}