{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\homepage\\\\BookAppoinment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BookAppointment = () => {\n  _s();\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: '',\n    location: '',\n    description: ''\n  });\n  const history = useHistory();\n\n  const handleAppointmentSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('/job-appointments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(appointmentData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create appointment');\n      }\n\n      const data = await response.json();\n      toast.success(data.message); // Redirect to the payment form after successful appointment booking\n\n      history.push('/payment');\n    } catch (error) {\n      console.error(error);\n      toast.error('Failed to create appointment');\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAppointmentData({ ...appointmentData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAppointmentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: appointmentData.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        value: appointmentData.location,\n        onChange: handleChange,\n        placeholder: \"Location\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: appointmentData.description,\n        onChange: handleChange,\n        placeholder: \"Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BookAppointment, \"7X7ODI7BkyLnhtVchbiFUd5OVqE=\", false, function () {\n  return [useHistory];\n});\n\n_c = BookAppointment;\nexport default BookAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useHistory","ToastContainer","toast","BookAppointment","appointmentData","setAppointmentData","date","location","description","history","handleAppointmentSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","success","message","push","error","console","handleChange","name","value","target"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/homepage/BookAppoinment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst BookAppointment = () => {\r\n  const [appointmentData, setAppointmentData] = useState({\r\n    date: '',\r\n    location: '',\r\n    description: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleAppointmentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('/job-appointments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(appointmentData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create appointment');\r\n      }\r\n\r\n      const data = await response.json();\r\n      toast.success(data.message);\r\n      // Redirect to the payment form after successful appointment booking\r\n      history.push('/payment');\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error('Failed to create appointment');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAppointmentData({ ...appointmentData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Book Appointment</h1>\r\n      <form onSubmit={handleAppointmentSubmit}>\r\n        <input type=\"date\" name=\"date\" value={appointmentData.date} onChange={handleChange} required />\r\n        <input type=\"text\" name=\"location\" value={appointmentData.location} onChange={handleChange} placeholder=\"Location\" required />\r\n        <textarea name=\"description\" value={appointmentData.description} onChange={handleChange} placeholder=\"Description\" required />\r\n        <button type=\"submit\">Book Appointment</button>\r\n      </form>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC;IACrDO,IAAI,EAAE,EAD+C;IAErDC,QAAQ,EAAE,EAF2C;IAGrDC,WAAW,EAAE;EAHwC,CAAD,CAAtD;EAMA,MAAMC,OAAO,GAAGT,UAAU,EAA1B;;EAEA,MAAMU,uBAAuB,GAAG,MAAOC,CAAP,IAAa;IAC3CA,CAAC,CAACC,cAAF;;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;QAChDC,MAAM,EAAE,MADwC;QAEhDC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFuC;QAKhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,eAAf;MAL0C,CAAtB,CAA5B;;MAQA,IAAI,CAACS,QAAQ,CAACO,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;MACArB,KAAK,CAACsB,OAAN,CAAcF,IAAI,CAACG,OAAnB,EAdE,CAeF;;MACAhB,OAAO,CAACiB,IAAR,CAAa,UAAb;IACD,CAjBD,CAiBE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACAzB,KAAK,CAACyB,KAAN,CAAY,8BAAZ;IACD;EACF,CAxBD;;EA0BA,MAAME,YAAY,GAAIlB,CAAD,IAAO;IAC1B,MAAM;MAAEmB,IAAF;MAAQC;IAAR,IAAkBpB,CAAC,CAACqB,MAA1B;IACA3B,kBAAkB,CAAC,EAAE,GAAGD,eAAL;MAAsB,CAAC0B,IAAD,GAAQC;IAA9B,CAAD,CAAlB;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAErB,uBAAhB;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,KAAK,EAAEN,eAAe,CAACE,IAAtD;QAA4D,QAAQ,EAAEuB,YAAtE;QAAoF,QAAQ;MAA5F;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,UAAxB;QAAmC,KAAK,EAAEzB,eAAe,CAACG,QAA1D;QAAoE,QAAQ,EAAEsB,YAA9E;QAA4F,WAAW,EAAC,UAAxG;QAAmH,QAAQ;MAA3H;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAU,IAAI,EAAC,aAAf;QAA6B,KAAK,EAAEzB,eAAe,CAACI,WAApD;QAAiE,QAAQ,EAAEqB,YAA3E;QAAyF,WAAW,EAAC,aAArG;QAAmH,QAAQ;MAA3H;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAQE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD,CApDD;;GAAM1B,e;UAOYH,U;;;KAPZG,e;AAsDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}