{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { Box, Button, FormControl, FormLabel, Grid, GridItem, Input } from '@chakra-ui/react';\n// import { ChakraProvider } from '@chakra-ui/react';\n// const Register = () => {\n//     const [formData, setFormData] = useState({\n//         fname: '',\n//         email: '',\n//         password: '',\n//         cpassword: '',\n//         role: '',\n//         firstName: '',\n//         lastName: '',\n//         designation: '',\n//         education: '',\n//         address: '',\n//         dob: '',\n//         nic: '',\n//         telephoneNumber: '',\n//         available: '',\n//         nationality: '',\n//         consultantType: '',\n//         availableTime: '',\n//         description: '',\n//         photo: null,\n//         cv: null\n//     });\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n//     const handleFileChange = (e) => {\n//         const { name, files } = e.target;\n//         setFormData({ ...formData, [name]: files[0] });\n//     };\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const formDataToSend = new FormData();\n//         for (let key in formData) {\n//             formDataToSend.append(key, formData[key]);\n//         }\n//         try {\n//             const response = await fetch('http://localhost:8009/register', {\n//                 method: 'POST',\n//                 body: formDataToSend\n//             });\n//             if (!response.ok) {\n//                 throw new Error('Failed to register');\n//             }\n//             const responseData = await response.json();\n//             console.log('Registration successful:', responseData);\n//         } catch (error) {\n//             console.error('Error registering:', error.message);\n//         }\n//     };\n//     return (\n//         <ChakraProvider>\n//         <Box maxW=\"md\" mx=\"auto\" p=\"6\">\n// <form onSubmit={handleSubmit}>\n//     <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\n//         <GridItem colSpan={1}>\n//             <FormControl isRequired>\n//                 <FormLabel>User Name</FormLabel>\n//                 <Input name=\"fname\" value={formData.fname} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Email</FormLabel>\n//                 <Input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Password</FormLabel>\n//                 <Input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Confirm Password</FormLabel>\n//                 <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Role</FormLabel>\n//                 <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\n//             </FormControl>\n//             {/* Add more basic details form fields */}\n//         </GridItem>\n//         <GridItem colSpan={1}>\n//             <FormControl isRequired>\n//                 <FormLabel>Last Name</FormLabel>\n//                 <Input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Designation</FormLabel>\n//                 <Input name=\"designation\" value={formData.designation} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Education</FormLabel>\n//                 <Input name=\"education\" value={formData.education} onChange={handleChange} />\n//             </FormControl>\n//             <FormControl isRequired>\n//                 <FormLabel>Address</FormLabel>\n//                 <Input name=\"address\" value={formData.address} onChange={handleChange} />\n//             </FormControl>\n//             {/* Add more additional details form fields */}\n//         </GridItem>\n//     </Grid>\n//     <FormControl>\n//         <FormLabel>Upload Photo</FormLabel>\n//         <Input type=\"file\" name=\"photo\" onChange={handleFileChange} />\n//     </FormControl>\n//     <FormControl>\n//         <FormLabel>Upload CV</FormLabel>\n//         <Input type=\"file\" name=\"cv\" onChange={handleFileChange} />\n//     </FormControl>\n//     <Button type=\"submit\" colorScheme=\"blue\">Register</Button>\n// </form>\n//         </Box>\n//         </ChakraProvider>\n//     );\n// };\n// export default Register;\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Grid, GridItem, Input, Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fname: '',\n    email: '',\n    password: '',\n    cpassword: '',\n    role: '',\n    firstName: '',\n    lastName: '',\n    designation: '',\n    education: '',\n    address: '',\n    dob: '',\n    nic: '',\n    telephoneNumber: '',\n    available: '',\n    nationality: '',\n    consultantType: '',\n    availableTime: '',\n    description: '',\n    photo: null,\n    cv: null\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: files[0]\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formDataToSend = new FormData();\n\n    for (let key in formData) {\n      formDataToSend.append(key, formData[key]);\n    }\n\n    try {\n      const response = await fetch('http://localhost:8009/register', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to register');\n      }\n\n      const responseData = await response.json();\n      console.log('Registration successful:', responseData);\n    } catch (error) {\n      console.error('Error registering:', error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"md\",\n      mx: \"auto\",\n      p: \"6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-30 bg-gray-200 rounded-2xl\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          isFitted: true,\n          variant: \"enclosed\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(TabList, {\n            mb: \"1em\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Job Seeker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Consult\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n            children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  templateColumns: \"repeat(2, 1fr)\",\n                  gap: 4,\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    colSpan: 1,\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"User Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"fname\",\n                        value: formData.fname,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"email\",\n                        name: \"email\",\n                        value: formData.email,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"password\",\n                        name: \"password\",\n                        value: formData.password,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Confirm Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"password\",\n                        name: \"cpassword\",\n                        value: formData.cpassword,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Role\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"password\",\n                        name: \"cpassword\",\n                        value: formData.cpassword,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    colSpan: 1,\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"lastName\",\n                        value: formData.lastName,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Designation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"designation\",\n                        value: formData.designation,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Education\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"education\",\n                        value: formData.education,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      isRequired: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"address\",\n                        value: formData.address,\n                        onChange: handleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: \"Upload Photo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"file\",\n                    name: \"photo\",\n                    onChange: handleFileChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    children: \"Upload CV\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"file\",\n                    name: \"cv\",\n                    onChange: handleFileChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  colorScheme: \"blue\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"two!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"FMd73i15t2aD6V4U+Yv3uzDrhiw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Grid","GridItem","Input","Tabs","TabList","TabPanels","Tab","TabPanel","ChakraProvider","Register","formData","setFormData","fname","email","password","cpassword","role","firstName","lastName","designation","education","address","dob","nic","telephoneNumber","available","nationality","consultantType","availableTime","description","photo","cv","handleChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","formDataToSend","FormData","key","append","response","fetch","method","body","ok","Error","responseData","json","console","log","error","message"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Box, Button, FormControl, FormLabel, Grid, GridItem, Input } from '@chakra-ui/react';\r\n// import { ChakraProvider } from '@chakra-ui/react';\r\n\r\n// const Register = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         fname: '',\r\n//         email: '',\r\n//         password: '',\r\n//         cpassword: '',\r\n//         role: '',\r\n//         firstName: '',\r\n//         lastName: '',\r\n//         designation: '',\r\n//         education: '',\r\n//         address: '',\r\n//         dob: '',\r\n//         nic: '',\r\n//         telephoneNumber: '',\r\n//         available: '',\r\n//         nationality: '',\r\n//         consultantType: '',\r\n//         availableTime: '',\r\n//         description: '',\r\n//         photo: null,\r\n//         cv: null\r\n//     });\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     const handleFileChange = (e) => {\r\n//         const { name, files } = e.target;\r\n//         setFormData({ ...formData, [name]: files[0] });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         const formDataToSend = new FormData();\r\n//         for (let key in formData) {\r\n//             formDataToSend.append(key, formData[key]);\r\n//         }\r\n\r\n//         try {\r\n//             const response = await fetch('http://localhost:8009/register', {\r\n//                 method: 'POST',\r\n//                 body: formDataToSend\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error('Failed to register');\r\n//             }\r\n\r\n//             const responseData = await response.json();\r\n//             console.log('Registration successful:', responseData);\r\n//         } catch (error) {\r\n//             console.error('Error registering:', error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <ChakraProvider>\r\n//         <Box maxW=\"md\" mx=\"auto\" p=\"6\">\r\n            // <form onSubmit={handleSubmit}>\r\n            //     <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\r\n            //         <GridItem colSpan={1}>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>User Name</FormLabel>\r\n            //                 <Input name=\"fname\" value={formData.fname} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Email</FormLabel>\r\n            //                 <Input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Password</FormLabel>\r\n            //                 <Input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Confirm Password</FormLabel>\r\n            //                 <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Role</FormLabel>\r\n            //                 <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             {/* Add more basic details form fields */}\r\n            //         </GridItem>\r\n            //         <GridItem colSpan={1}>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Last Name</FormLabel>\r\n            //                 <Input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Designation</FormLabel>\r\n            //                 <Input name=\"designation\" value={formData.designation} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Education</FormLabel>\r\n            //                 <Input name=\"education\" value={formData.education} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             <FormControl isRequired>\r\n            //                 <FormLabel>Address</FormLabel>\r\n            //                 <Input name=\"address\" value={formData.address} onChange={handleChange} />\r\n            //             </FormControl>\r\n            //             {/* Add more additional details form fields */}\r\n            //         </GridItem>\r\n            //     </Grid>\r\n            //     <FormControl>\r\n            //         <FormLabel>Upload Photo</FormLabel>\r\n            //         <Input type=\"file\" name=\"photo\" onChange={handleFileChange} />\r\n            //     </FormControl>\r\n            //     <FormControl>\r\n            //         <FormLabel>Upload CV</FormLabel>\r\n            //         <Input type=\"file\" name=\"cv\" onChange={handleFileChange} />\r\n            //     </FormControl>\r\n            //     <Button type=\"submit\" colorScheme=\"blue\">Register</Button>\r\n            // </form>\r\n//         </Box>\r\n//         </ChakraProvider>\r\n//     );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Grid, GridItem, Input, Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = useState({\r\n        fname: '',\r\n        email: '',\r\n        password: '',\r\n        cpassword: '',\r\n        role: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        designation: '',\r\n        education: '',\r\n        address: '',\r\n        dob: '',\r\n        nic: '',\r\n        telephoneNumber: '',\r\n        available: '',\r\n        nationality: '',\r\n        consultantType: '',\r\n        availableTime: '',\r\n        description: '',\r\n        photo: null,\r\n        cv: null\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { name, files } = e.target;\r\n        setFormData({ ...formData, [name]: files[0] });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formDataToSend = new FormData();\r\n        for (let key in formData) {\r\n            formDataToSend.append(key, formData[key]);\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8009/register', {\r\n                method: 'POST',\r\n                body: formDataToSend\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to register');\r\n            }\r\n\r\n            const responseData = await response.json();\r\n            console.log('Registration successful:', responseData);\r\n        } catch (error) {\r\n            console.error('Error registering:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ChakraProvider>\r\n            <Box maxW=\"md\" mx=\"auto\" p=\"6\">\r\n            <div className='m-30 bg-gray-200 rounded-2xl'>\r\n            <Tabs isFitted variant='enclosed'> {/* Adjust the width as needed */}\r\n                <TabList mb='1em'>\r\n                    <Tab>Job Seeker</Tab>\r\n                    <Tab>Consult</Tab>\r\n                </TabList>\r\n                <TabPanels>\r\n                    <TabPanel>\r\n                    <form onSubmit={handleSubmit}>\r\n                <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\r\n                    <GridItem colSpan={1}>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>User Name</FormLabel>\r\n                            <Input name=\"fname\" value={formData.fname} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Confirm Password</FormLabel>\r\n                            <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Role</FormLabel>\r\n                            <Input type=\"password\" name=\"cpassword\" value={formData.cpassword} onChange={handleChange} />\r\n                        </FormControl>\r\n                        {/* Add more basic details form fields */}\r\n                    </GridItem>\r\n                    <GridItem colSpan={1}>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Last Name</FormLabel>\r\n                            <Input name=\"lastName\" value={formData.lastName} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Designation</FormLabel>\r\n                            <Input name=\"designation\" value={formData.designation} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Education</FormLabel>\r\n                            <Input name=\"education\" value={formData.education} onChange={handleChange} />\r\n                        </FormControl>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Address</FormLabel>\r\n                            <Input name=\"address\" value={formData.address} onChange={handleChange} />\r\n                        </FormControl>\r\n                        {/* Add more additional details form fields */}\r\n                    </GridItem>\r\n                </Grid>\r\n                <FormControl>\r\n                    <FormLabel>Upload Photo</FormLabel>\r\n                    <Input type=\"file\" name=\"photo\" onChange={handleFileChange} />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormLabel>Upload CV</FormLabel>\r\n                    <Input type=\"file\" name=\"cv\" onChange={handleFileChange} />\r\n                </FormControl>\r\n                <Button type=\"submit\" colorScheme=\"blue\">Register</Button>\r\n            </form>\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <p>two!</p>\r\n                    </TabPanel>\r\n                </TabPanels>\r\n            </Tabs>\r\n        </div>\r\n\r\n            </Box>\r\n      \r\n            \r\n        </ChakraProvider>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"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"},"metadata":{},"sourceType":"module"}