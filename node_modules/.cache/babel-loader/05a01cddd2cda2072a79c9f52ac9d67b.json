{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senethg\\\\Desktop\\\\Mobile App\\\\Test\\\\test server\\\\Gymekalk\\\\client\\\\src\\\\dashbord\\\\profileitems\\\\Userqr.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Userqr() {\n  _s();\n\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const generateQRCode = async () => {\n    try {\n      const response = await fetch(`/user/profile`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.getItem('usersdatatoken')\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const data = await response.json();\n      setUserData(data.data);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    generateQRCode();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen font-bold\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 50,\n        color: \"#FFFFFF\",\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-b from-gray-900 to-gray-600 bg-gradient-to-r p-4 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4 bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent pl-1 rounded-lg\",\n        children: \"BMI Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error loading user data: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-b from-gray-900 to-gray-600 bg-gradient-to-r p-1 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-1 bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent text-center pr-5 rounded-lg\",\n        children: \"Your QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-20 mb-2\",\n        children: userData && /*#__PURE__*/_jsxDEV(QRCode, {\n          value: JSON.stringify(userData),\n          size: 222\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Userqr, \"TCQ/WlpAcZmmRyGiHqHX0K1oj1w=\");\n\n_c = Userqr;\nexport default Userqr;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userqr\");","map":{"version":3,"names":["React","useState","useEffect","QRCode","Userqr","userData","setUserData","isLoading","setIsLoading","error","setError","generateQRCode","response","fetch","method","headers","Authorization","localStorage","getItem","ok","Error","statusText","data","json","message","JSON","stringify"],"sources":["C:/Users/senethg/Desktop/Mobile App/Test/test server/Gymekalk/client/src/dashbord/profileitems/Userqr.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nfunction Userqr() {\r\n  const [userData, setUserData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  const generateQRCode = async () => {\r\n    try {\r\n        const response = await fetch(`/user/profile`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: localStorage.getItem('usersdatatoken'),\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n        const data = await response.json();\r\n        setUserData(data.data);\r\n        setIsLoading(false);\r\n    } catch (error) {\r\n        setError(error);\r\n        setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateQRCode();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n        <div className=\"flex justify-center items-center h-screen font-bold\">\r\n            <ClipLoader size={50} color=\"#FFFFFF\" loading={isLoading} />\r\n        </div>\r\n    );\r\n}\r\n\r\nif (error) {\r\n    return <div className='bg-gradient-to-b from-gray-900 to-gray-600 bg-gradient-to-r p-4 rounded-md'>\r\n    <h1 className='text-2xl font-bold mb-4 bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent pl-1 rounded-lg'>\r\n        BMI Information\r\n    </h1>\r\n    <div>Error loading user data: {error.message}</div>\r\n</div>\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-gradient-to-b from-gray-900 to-gray-600 bg-gradient-to-r p-1 rounded-md\">\r\n        <h1 className=\"text-2xl font-bold mb-1 bg-gradient-to-r from-cyan-500 to-blue-500 bg-clip-text text-transparent text-center pr-5 rounded-lg\">\r\n          Your QR Code\r\n        </h1>\r\n        <div className=\"ml-20 mb-2\">\r\n          {userData && <QRCode value={JSON.stringify(userData)} size={222} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Userqr;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;EAGA,MAAMU,cAAc,GAAG,YAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAF,EAAkB;QAC1CC,MAAM,EAAE,KADkC;QAE1CC,OAAO,EAAE;UACL,gBAAgB,kBADX;UAELC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,gBAArB;QAFV;MAFiC,CAAlB,CAA5B;;MAQA,IAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAUR,QAAQ,CAACS,UAAnB,CAAN;MACH;;MACD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAjB,WAAW,CAACgB,IAAI,CAACA,IAAN,CAAX;MACAd,YAAY,CAAC,KAAD,CAAZ;IACH,CAfD,CAeE,OAAOC,KAAP,EAAc;MACZC,QAAQ,CAACD,KAAD,CAAR;MACAD,YAAY,CAAC,KAAD,CAAZ;IACH;EACF,CApBD;;EAsBAN,SAAS,CAAC,MAAM;IACdS,cAAc;EACf,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAIJ,SAAJ,EAAe;IACb,oBACI;MAAK,SAAS,EAAC,qDAAf;MAAA,uBACI,QAAC,UAAD;QAAY,IAAI,EAAE,EAAlB;QAAsB,KAAK,EAAC,SAA5B;QAAsC,OAAO,EAAEA;MAA/C;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,IAAIE,KAAJ,EAAW;IACP,oBAAO;MAAK,SAAS,EAAC,4EAAf;MAAA,wBACP;QAAI,SAAS,EAAC,kHAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADO,eAIP;QAAA,wCAA+BA,KAAK,CAACe,OAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QAJO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EAMH;;EAEC,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,4EAAf;MAAA,wBACE;QAAI,SAAS,EAAC,8HAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,YAAf;QAAA,UACGnB,QAAQ,iBAAI,QAAC,MAAD;UAAQ,KAAK,EAAEoB,IAAI,CAACC,SAAL,CAAerB,QAAf,CAAf;UAAyC,IAAI,EAAE;QAA/C;UAAA;UAAA;UAAA;QAAA;MADf;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAYD;;GA7DQD,M;;KAAAA,M;AA+DT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}